{"version":3,"sources":["pages/HomePage.js","Components /ArticlesList.js","pages/article-content.js","pages/ArticleListPage.js","pages/AboutPage.js","Components /CommentsList.js","Components /UpvotesSection.js","Components /AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","ArticleList","article","map","key","to","name","title","content","substring","articles","ArticleListPage","ArticlesList","articleContent","AboutPage","CommentsList","comments","comment","className","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","id","a","async","fetch","method","result","json","body","upvotesArticle","AddCommentForm","useState","setUsername","commentText","setCommentText","type","value","rows","cols","onClick","JSON","stringify","headers","addComment","NotFoundPage","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","NavBar","App","Switch","path","component","exact","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b6eead1.chunk.js","sourcesContent":["import React from 'react';\n\nconst  HomePage = () => (\n    <React.Fragment>\n    <h1> Hello, welcome to my blog! </h1>\n\n    <p>\n        \" It is a long established fact that a reader will be distracted by the readable content of a\" +\n    \" page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less \" +\n    \"normal distribution of letters, as opposed to using 'Content here, content here', making it \" +\n    \"look like readable English. Many desktop publishing packages and web page editors now use Lorem \" +\n    \"Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still \" +\n    \"in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on \" +\n    \"purpose (injected humour and the like). \"\n    </p>\n    <p>\n        \" Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of\" +\n        \"classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin\" +\n        \"professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words,\" +\n        \"consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical\" +\n        \"literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33\" +\n        \"of de Finibus Bonorum et Malorum\" + \"(The Extremes of Good and Evil) by Cicero, written in 45 BC. This\" +\n        \"book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of\" +\n        \"Lorem Ipsum, \" + \"Lorem ipsum dolor sit amet..\" + \", comes from a line in section 1.10.32. \"\n    </p>\n    <p>\n    \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered \" +\n    \"alteration in some form, by injected humour, or randomised words which don't look even slightly \" +\n    \"believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything \" +\n    \"embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat \" +\n    \"predefined chunks as necessary, making this the first true generator on the Internet. It uses a \" +\n    \"dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate \" +\n    \"Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, \" +\n    \"injected humour, or non-characteristic words etc.\"\n    </p>\n    </React.Fragment>\n );\n export default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticleList = ({ article }) => (\n    <React.Fragment>\n        {article.map((article, key) => (\n            <Link key={key} to={`/article/${article.name}`}>\n                <h3>{article.title}</h3>\n                <p>{article.content[0].substring(0, 150)}...</p>\n            </Link>\n        ))}\n\n    </React.Fragment>\n        );\n        export default ArticleList;","import React from 'react';\n\nconst articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            ' \" It is a long established fact that a reader will be distracted by the readable content of a\" +\\n' +\n            '    \" page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less \" +\\n' +\n            '    \"normal distribution of letters, as opposed to using \\'Content here, content here\\', making it \" +\\n' +\n            '    \"look like readable English. Many desktop publishing packages and web page editors now use Lorem \" +\\n' +\n            '    \"Ipsum as their default model text, and a search for \\'lorem ipsum\\' will uncover many web sites still \" +\\n' +\n            '    \"in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on \" +\\n' +\n            '    \"purpose (injected humour and the like). \" '\n        ]\n    },\n\n    {\n        name: 'build-node-server' ,\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            \" How to build Nodejs web server from scratch. We will create a web server. Node.js is a very \" +\n            \"lightweight server. Node js is a platform for building fast and scalable server-side applications\" +\n            \" using JavaScript. Node.js enables a JavaScript to be used for server-side scripting and runs \" +\n            \"scripts server-side to produce dynamic web content before the page is sent back to the web \" +\n            \"browser. There are many modules such as the “http” and “request” module, which helps in \" +\n            \"processing server related requests in the web server space.\\n\" +\n            \"\\n \"\n        ]\n    },\n\n    {\n        name: 'resumes' ,\n        title: 'My thoughts on Resumes' ,\n        content: [\n            \" Resume builders are interactive online resume templates that allow you to plug in information and build a cohesive resume. To build a resume using a resume builder, follow these easy steps:\\n\" +\n            \"\\n\" +\n            \"Find a resume builder you like (our free builders below are all great options).\\n\" +\n            \"Make sure you have your materials ready, including your resume and the job description of the \" +\n            \"position you’re applying for.\\n\" +\n            \"Follow the prompts from the resume builder you choose. Note: our simplicity ratings beside each \" +\n            \"builder can help you determine which prompts will require the most/least effort on your part.\\n\" +\n            \"Last but not least, scan your resume with Jobscan to make sure it is optimized for those pesky \" +\n            \"applicant tracking systems! \\n\" +\n            \"These are our top 10 most popular free resume builders that you can use online. Many of these \" +\n            \"builders will try their best to get you to pay for them, but we’ve found loopholes to help you \" +\n            \"use each one for free. \"\n        ]\n    }\n\n];\n\nexport default articles;","import React from 'react';\nimport ArticlesList from \"../Components /ArticlesList\";\nimport articleContent from './article-content';\n\nconst  ArticleListPage = () => (\n    <React.Fragment>\n        <h1> Article </h1>\n        <ArticlesList article={articleContent} />\n\n            </React.Fragment>\n\n        );\nexport default ArticleListPage;","import React from 'react';\n\nconst  AboutPage = () => (\n    <React.Fragment>\n        <h1> This Page is about me </h1>\n\n        <p>\n            \" It is a long established fact that a reader will be distracted by the readable content of a\" +\n            \" page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less \" +\n            \"normal distribution of letters, as opposed to using 'Content here, content here', making it \" +\n            \"look like readable English. Many desktop publishing packages and web page editors now use Lorem \" +\n            \"Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still \" +\n            \"in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on \" +\n            \"purpose (injected humour and the like). \"\n        </p>\n        <p>\n            \" Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of\" +\n            \"classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin\" +\n            \"professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words,\" +\n            \"consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical\" +\n            \"literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33\" +\n            \"of de Finibus Bonorum et Malorum\" + \"(The Extremes of Good and Evil) by Cicero, written in 45 BC. This\" +\n            \"book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of\" +\n            \"Lorem Ipsum, \" + \"Lorem ipsum dolor sit amet..\" + \", comes from a line in section 1.10.32. \"\n        </p>\n        <p>\n            \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered \" +\n            \"alteration in some form, by injected humour, or randomised words which don't look even slightly \" +\n            \"believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything \" +\n            \"embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat \" +\n            \"predefined chunks as necessary, making this the first true generator on the Internet. It uses a \" +\n            \"dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate \" +\n            \"Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, \" +\n            \"injected humour, or non-characteristic words etc.\"\n        </p>\n    </React.Fragment>\n);\nexport default AboutPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n        <>\n            <h3>Comments:</h3>\n            {comments.map((comment, key) => (\n                <div className=\"comment\" key={key}>\n                    <h4>{comment.username}</h4>\n                    <p>{comment.text}</p>\n                </div>\n            ))}\n            </>\n        );\n\nexport default CommentsList;\n","import React from 'react'\n\nconst UpvotesSection = ({articleName, upvotes, setArticleInfo}) => {\n    const upvotesArticle = async () => {\n        const result = await fetch(`http://localhost:8000/api/articles/${articleName}/upvotes`, {\n            method: 'post',\n        });\n\n        const body = await result.json();\n        setArticleInfo(body);\n    };\n    return (\n    <div id = \"upvotes-section\">\n    <button> onClick={() => upvotesArticle()}>Add Upvotes </button>\n    <p>This post has been upvoted {upvotes} times</p>\n    </div>\n);\n};\n\n\n\nexport default UpvotesSection;","import React, {useState} from 'react';\n\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`\"http://localhost:8000/api/articles/${articleName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({username, text: commentText}),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n        const body = await result.json();\n        setArticleInfo(body);\n        setUsername('');\n        setCommentText('');\n    };\n        return (\n            <div id=\"add comment-form\">\n                <h3> Add a Comment </h3>\n                <label>\n                    Name:\n                    <input type=\"text\" value={username} //onChange{(event) => setUsername(event.target.value)//\n                     />\n                </label>\n                <lable>\n                    Comment:\n                    <input type=\"text\" value={commentText} // onChange{(event) => setCommenttext(event.target.value)//\n                    />\n                    <textarea rows=\"4\" cols=\"50\" value={commentText}/>\n                </lable>\n                <input type=\"text\" />\n                <textarea rows=\"4\" cols=\"50\" />\n                <button onClick={() => addComment()}>Add Comment </button>\n            </div>\n        );\n    };\n\n\n\nexport default AddCommentForm;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found </h1>\n);\n\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\nimport ArticlesList from \"../Components /ArticlesList\";\nimport CommentsList from \"../Components /CommentsList\";\nimport UpvotesSection from \"../Components /UpvotesSection\";\nimport AddCommentForm from \"../Components /AddCommentForm\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport articleContent from './article-content';\n\n\nconst  ArticlePage = ({ match }) => {\n\n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n\n    const [articleInfo, setArticleInfo] = useState({ upvotes:0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`http://localhost:8000/api/articles/${name}`);\n            const body = await result.json();\n            setArticleInfo(body);\n        };\n        fetchData();\n\n    }, [name]);\n\n    if (!article) return <NotFoundPage/>;\n\n    const otherArticles =  articleContent.filter(article => article.name !== name);\n\n    return (\n    <>\n        <h1> {article.title} </h1>\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\n\n        {article.content.map((paragraph, key) => (\n            <p key={key}>{paragraph}</p>\n        ))}\n        <CommentsList comments={articleInfo.comments}/>\n        <AddCommentForm articleName = {name} setArticleInfo= {setArticleInfo} />\n        <h3> Other Articles: </h3>\n\n        <ArticlesList article={otherArticles} />\n                </>\n);\n};\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/article-list-Page\">ArticleListPage</Link>\n            </li>\n\n\n        </ul>\n\n    </nav>\n\n);\nexport default NavBar;\n","\nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n    Route,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport ArticleListPage from \"./pages/ArticleListPage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.css';\nimport Switch from \"react-router-dom/es/Switch\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n        <div className=\"App\">\n            <NavBar />\n            <div id=\"page-body\">\n                <Switch>\n         <Route path=\"/\" component={HomePage} exact />\n         <Route path=\"/article/:name\" component= {ArticlePage} />\n         <Route path=\"/about\" component= {AboutPage} />\n         <Route path=\"/article-list-page\" component= {ArticleListPage}  />\n         <Route component={NotFoundPage} />\n                </Switch>\n        </div>\n        </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}